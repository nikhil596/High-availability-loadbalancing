global
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    stats socket /var/lib/haproxy/stats

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# Stats page
#---------------------------------------------------------------------
listen stats
    bind *:1936
    stats enable
    stats hide-version
    stats uri /haproxy?stats
    stars realm Loadbalancer\ Servers
    stats auth haproxy:haproxy
    stats refresh 5s

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main *:80
    acl url_static       path_beg       -i /static /images /javascript /stylesheets
    acl url_static       path_end       -i .jpg .gif .png .css .js

    acl host_docker hdr(host) -i docker.myweb.net

    use_backend docker if host_docker
    default_backend     webservers

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend webservers
    balance     roundrobin
    server  master  10.0.0.11:8080 check inter 1000 fall 3 rise 2
    server  node1   10.0.0.12:8080 check inter 1000 fall 3 rise 2
    server  node2   10.0.0.13:8080 check inter 1000 fall 3 rise 2
    server  node3   10.0.0.14:8080 check inter 1000 fall 3 rise 2

backend docker
    balance     roundrobin
    server  docker1 dockerhost:9090 check
